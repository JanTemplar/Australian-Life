_switch = ((_this select 3) select 0);if (isNil "hasDrugDealerJob") then{	hasDrugDealerJob = false;};if (isNil "isDealer") then{	isDealer = false;};if (isNil "xZe_drugGetSettings") then{	xZe_drugGetSettings =	{		private ["_type", "_return"];		_type = _this;		{			if (_x select 0 == _type) exitWith			{				_x			};		} forEach drugDealerJobSettings;	};};if (isNil "xZe_drugClientCleanUp") then{	xZe_drugClientCleanUp =	{		_markerName = format["drugDealClientMarker%1", player];		deleteMarkerLocal _markerName;		hasDrugDealerJob = false;	};};if (_switch == "contacts") then{	if (isDealer) exitWith	{		player groupchat "You are already a drug dealer";	};		if (hasDrugDealerJob) exitWith	{		player groupchat "You cannot drug deal yet";	};		player groupchat "You are now a drug dealer, a client will SMS you when he wants to buy some drugs";		isDealer = true;		[0,0,0,["startDealing"]] execVM "slr\dealerJob.sqf";};if (_switch == "server") then{	serverDrugAddicts = [];	for [{_i=0},{_i < numDrugAddicts},{_i=_i+1}] do	{		_randomPoint = drugDealerJobLocations select (ceil random ((count drugDealerJobLocations)-1));		_spawnPoint = getMarkerPos _randomPoint;		_spawnPoint = [(_spawnPoint select 0)+random 500,(_spawnPoint select 1)+random 500,0];		_randomClient = drugAddicts select (ceil random ((count drugAddicts)-1));		call compile format["		_randomClient createUnit[_spawnPoint, group drugLogic, ""DDClient%1 = this; this setVehicleVarName """"DDClient%1""""; this disableAI """"TARGET"""";""];", _i];		processInitCommands;				call compile format["		serverDrugAddicts = serverDrugAddicts + [ [DDClient%1, %1] ];		DDClient%1 Action[""sitdown"", DDClient%1];		DDClient%1 setDir (random 360);		", _i];				drugLogic setBehaviour "CARELESS";	};	publicVariable "serverDrugAddicts";		[] spawn	{		while {true} do		{			{				_obj = _x select 0;				_num = _x select 1;				if (!alive _obj) then				{					_obj setpos[0,0,0];					deleteVehicle _obj;					_randomPoint = drugDealerJobLocations select (ceil random ((count drugDealerJobLocations)-1));					_spawnPoint = getMarkerPos _randomPoint;					_spawnPoint = [(_spawnPoint select 0)+random 500,(_spawnPoint select 1)+random 500,0];					_randomClient = drugAddicts select (ceil random ((count drugAddicts)-1));										call compile format["					_randomClient createUnit[_spawnPoint, group drugLogic, ""DDClient%1 = this; this setVehicleVarName """"DDClient%1""""; this disableAI """"TARGET"""";""];", _num];					processInitCommands;							call compile format["					serverDrugAddicts set[_num,[DDClient%1, %1]];					DDClient%1 Action[""sitdown"", DDClient%1];					DDClient%1 setDir (random 360);					", _num];										publicVariable "serverDrugAddicts";					drugLogic setBehaviour "CARELESS";				};			} forEach serverDrugAddicts;							sleep 25;		};	};		[] spawn	{		while {true} do		{			{				if (_x select 3 <= (_x select 4)) then				{					_x set[1, ((_x select 1)+(_x select 2))];					_x set[3, (_x select 3)+1];				};			} forEach drugPriceFlunctuation;						publicVariable "drugPriceFlunctuation";			sleep 2700;		};	};	};if (isNil "DD_createClient") then{	DD_createClient =	{		if (hasDrugDealerJob) exitWith		{			player groupchat "You already are drug dealing";		};			hasDrugDealerJob = true;			_type = (_this select 0);		_settings = _type call xZe_drugGetSettings;		_randomClient = serverDrugAddicts select (ceil random ((count serverDrugAddicts)-1));		_maxAmount = _this select 1;		_minAmount = _this select 2;		_amount =  _this select 3;		_itemName = _type call TNL_finv_getitemName;				LdrugDealerClient = _randomClient select 0;			if (_amount < _minAmount) then		{			_amount = _minAmount;		};				_markerName = format["drugDealClientMarker%1", player];		_marker = createMarkerLocal [_markerName, getPos LdrugDealerClient];		_marker setMarkerShapeLocal "ICON";		_markerName setMarkerTypeLocal "JOIN";		_markerName setMarkerTextLocal format["Drug Client: %1x %2", _amount, _itemName];		_markerName setMarkerSizeLocal [0.6,0.6];		_markerName setMarkerColorLocal "ColorRed";				_tipOfChance = random 100;						if (_tipOfChance <= drugDealerChanceOfTipOf) then		{			["sendsms", "We have been tipped off about a drug deal!", "POLICE", LdrugDealerClient] execVM "slr\phones.sqf";		};				[_type,_amount] spawn		{			_markerName = format["drugDealClientMarker%1", player];			while {hasDrugDealerJob} do			{				_markerName setMarkerPosLocal getpos LdrugDealerClient;							if (player distance getpos LdrugDealerClient <= 5) then				{					[(_this select 0), (_this select 1)] call DD_sell;				};							if (!alive LdrugDealerClient) then				{					if (hasDrugDealerJob) then					{						player groupchat "Your client has been killed!";						[] call xZe_drugClientCleanup;					};									if (!hasDrugDealerJob) exitWith {};				};					sleep 10;			};		};	};};if (isNil "DD_sell") then{	DD_sell =	{		_type = (_this select 0);		_amount = (_this select 1);		_itemAmount = _type call TNL_finv_getitemAmount;		_itemName = _type call TNL_finv_getitemName;			if (_itemAmount < _amount ) exitWith 		{			player groupchat "You dont have enough to sell to the client";		};				_sellPrice = 0;		{			if (_x select 0 == _type) then			{				_sellPrice = ((_type call TNL_finv_getItemSellPrice) + (_x select 1));			};		} forEach drugPriceFlunctuation;		_sellPrice = _sellPrice * _amount;				[{			{				if ((_this select 0) == (_x select 0)) then				{					if (_x select 3 > 0) then					{						_x set[1, ((_x select 1)-(_x select 2))];						_x set[3, (_x select 3)-1];					};				};			} forEach drugPriceFlunctuation;						publicVariable "drugPriceFlunctuation";		}, [_type]] call TNL_fnet_execPublic;			["IllegalMoney", _sellPrice] call TNL_finv_addInventoryItem;		[_type, -(_amount)] call TNL_finv_addInventoryItem;			player groupchat format["You sell %1 %2 to the client for $%3", _amount, _itemName, _sellPrice];		[] call xZe_drugClientCleanup;	};};if (_switch == "startDealing") then{	[] spawn	{		while {isDealer} do		{			if (!hasDrugDealerJob) then			{				_drugsAvailable = [];				while {count _drugsAvailable <= 0} do				{					{						_amount = (_x select 0) call TNL_finv_getItemAmount;										if (_amount >= 0) then						{							_drugsAvailable = _drugsAvailable + [(_x select 0)];						};						} forEach drugDealerJobSettings;										sleep 30;				};						_type = (_drugsAvailable select ((ceil random count _drugsAvailable)-1));				_chance = random 100;				_phoneAmount = "mobilephone" call TNL_finv_getitemAmount;				_hasPhone = false;								if (_phoneAmount >= 1) then				{					_hasPhone = true;				};				_numCops = ["COP"] call TNL_fplayer_getPlayerTypesCount;								_settings = _type call xZe_drugGetSettings;				_maxAmount = (((_settings) select 1) select 0);				_minAmount = (((_settings) select 1) select 1);				_amount =  (floor(random ((_maxAmount - _minAmount)+ _minAmount)));				_itemName = _type call TNL_finv_getitemName;				_drugAmount = _type call TNL_finv_getItemAmount;								if (_amount < _minAmount) then 				{					_amount = _minAmount;				};								if (_drugAmount < _amount) then				{					_amount = _drugAmount;				};								if (_drugAmount == 0) then				{					_hasPhone = false;				};								_clientChance = (drugDealerClientChance);								if (_chance <= _clientChance) then				{					if (_hasPhone) then					{						[format ["%2) %1", format["I want to buy %1 %2, check your map for the location", _amount, _itemName], "Unknown"]] call TNL_fextHint_Hint;						[_type, _maxAmount, _minAmount, _amount] spawn DD_createClient;					};				};							};					sleep 120;		};	};	};if (_switch == "cancel") then{	if (hasDrugDealerJob) then	{		[] call xZe_drugClientCleanup;		[format["You decide not to sell to the client, you must wait %1 seconds before you can get another job", drugDealerJobWaitTime]] call TNL_fextHint_Hint;	};		isDealer = false;		[] spawn	{		private ["_i"];		_i = 0;		hasDrugDealerJob = true;		while {true} do		{			if (_i == drugDealerJobWaitTime) exitWith			{				["You can start dealing again now"] call TNL_fextHint_Hint;				hasDrugDealerJob = false;			};			_i = _i + 1;			sleep 1;		};	};};